(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{101:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return f}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),p=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},b=function(e){var n=p(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(t),d=r,f=b["".concat(c,".").concat(d)]||b[d]||u[d]||o;return t?a.a.createElement(f,i(i({ref:n},s),{},{components:t})):a.a.createElement(f,i({ref:n},s))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,c=new Array(o);c[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<o;s++)c[s]=t[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},83:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(3),a=t(7),o=(t(0),t(101)),c={id:"knex",title:"Knex"},i={unversionedId:"database/knex",id:"database/knex",isDocsHomePage:!1,title:"Knex",description:"Knex is a query builder for databases. It can create and query tables.",source:"@site/docs/database/knex.md",slug:"/database/knex",permalink:"/dev/docs/database/knex",editUrl:"https://github.com/vampiro/dev/edit/master/website/docs/database/knex.md",version:"current",sidebar:"someSidebar",previous:{title:"Koa",permalink:"/dev/docs/server/koa"},next:{title:"gql",permalink:"/dev/docs/database/gql"}},l=[{value:"Installation",id:"installation",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Create Table",id:"create-table",children:[]},{value:"Package.json scripts",id:"packagejson-scripts",children:[]}],s={toc:l};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Knex is a query builder for databases. It can create and query tables."),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"npm install knex rimraf ts-node\n")),Object(o.b)("h2",{id:"configuration"},"Configuration"),Object(o.b)("p",null,"Create a file called ",Object(o.b)("inlineCode",{parentName:"p"},"knex.ts"),". Replace ",Object(o.b)("inlineCode",{parentName:"p"},"YOUR_DATABASE_NAME"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},'// knex.ts\nimport knex from "knex";\n\nexport default knex({\n  client: "sqlite3",\n  connection: {\n    filename: "./YOUR_DATABASE_NAME.sqlite",\n  },\n  useNullAsDefault: true,\n});\n')),Object(o.b)("h2",{id:"create-table"},"Create Table"),Object(o.b)("p",null,"Create a file called ",Object(o.b)("inlineCode",{parentName:"p"},"createTable.ts"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},'// createTable.ts\nimport { exit } from "process";\nimport knex from "./knex";\n\nasync function createTables() {\n  try {\n    console.log("Creating User table.");\n    await knex.schema.createTable("User", (table) => {\n      table.string("id").primary();\n      table.string("firstName");\n    });\n\n    exit();\n  } catch (e) {\n    console.error(e);\n    exit();\n  }\n}\n\ncreateTables();\n')),Object(o.b)("h2",{id:"packagejson-scripts"},"Package.json scripts"),Object(o.b)("p",null,"In your ",Object(o.b)("inlineCode",{parentName:"p"},"package.json"),", insert these into the ",Object(o.b)("inlineCode",{parentName:"p"},"scripts")," sections:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'"db-create": "npm run db-drop && ts-node ./createTables.ts",\n"db-drop": "rimraf ./YOUR_DATABASE_NAME.sqlite"\n')))}p.isMDXComponent=!0}}]);