(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),a=(n(0),n(99)),i={id:"erc20",title:"ERC20"},c={unversionedId:"crypto/erc20",id:"crypto/erc20",isDocsHomePage:!1,title:"ERC20",description:"Interface",source:"@site/docs/crypto/erc20.md",slug:"/crypto/erc20",permalink:"/dev/docs/crypto/erc20",editUrl:"https://github.com/vampiro/dev/edit/master/website/docs/crypto/erc20.md",version:"current",sidebar:"someSidebar",next:{title:"Create App",permalink:"/dev/docs/"}},s=[],l={toc:s};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"interface"},"Interface"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"function totalSupply() public constant returns (uint);\nfunction balanceOf(address tokenOwner) public constant returns (uint balance);\nfunction allowance(address tokenOwner, address spender) public constant returns (uint remaining);\nfunction transfer(address to, uint tokens) public returns (bool success);\nfunction approve(address spender, uint tokens) public returns (bool success);\nfunction transferFrom(address from, address to, uint tokens) public returns (bool success);\n\nevent Transfer(address indexed from, address indexed to, uint tokens);\nevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n")),Object(a.b)("p",null,"Explanation of each method:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://en.bitcoinwiki.org/wiki/ERC20"},"https://en.bitcoinwiki.org/wiki/ERC20")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol"},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol"))),Object(a.b)("h1",{id:"code-notes"},"Code Notes"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},'You cannot get "existing" keys for a mapping. You\'d have to store them separately.'),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"public")," contract variables automatically have a getter created for them, but not a setter."),Object(a.b)("li",{parentName:"ul"},"When a ",Object(a.b)("inlineCode",{parentName:"li"},"require")," condition is not met, all prior transactions are undone."),Object(a.b)("li",{parentName:"ul"},"Useful variables available in Solidity",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"msg.sender: The address of the sender of the whatever function is being executed."),Object(a.b)("li",{parentName:"ul"},"block.timestamp: The current block timestamp as seconds since unix epoch.")))))}p.isMDXComponent=!0}}]);